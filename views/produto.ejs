<!-- produto.ejs -->
<!DOCTYPE html>
<html lang="pt-br">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="/assets/css/stylePaginaProfutos.css">
    <link rel="stylesheet" href="/assets/css/style.css">
    <script src="https://kit.fontawesome.com/532df4697a.js"></script>
    <script src="/assets/js/script.js" defer></script>
    <script src="/assets/js/enviarComentario.js" defer></script>
    <link rel="shortcut icon" href="/assets/img/logo.png" type="image/x-icon">
    <title><%= produto.nome %></title>
</head>
<body>
    <div class="menu-lateral">
        <div class="fechar-menu"><i class="fa-solid fa-xmark"></i></div>
        <div class="menu-lateral-produto">
            <h4>Menu</h4>
            <nav class="conteudo-menu-lateral">
                <ul>
                    <li><a href="/"><i class="fa-solid fa-house" style="color: #ffffff;"></i>Home</a></li>
                    <li><a href="https://www.instagram.com/bunny.mobile/?igsh=MWNteDN0eXFoaTZiaQ%3D%3D" target="_blank"><i class="fa-brands fa-instagram" style="color: #ffffff;"></i>Instagram</a></li>
                    <li><a href="https://www.bunnymobile.com.br" target="_blank"><i class="fa-solid fa-earth-americas"></i>Site</a></li>
                    <li><a href="https://wa.me/5586981870000?text=Vim+atr%C3%A1s+do+app+de+pesquisa+da+Bunny" target="_blank"><i class="fa-brands fa-whatsapp"></i>WhatsApp</a></li>
                </ul>
                
            </nav>
        </div>
        <div class="logo">
            <img src="/assets/img/logo.png" alt="">
        </div>
    </div>
    <header class="cabecalho">
        <div class="logo-principal">
            <a href="/"><img src="/assets/img/logo.png" alt=""></a>
        </div>
        <nav class="cabecalho-menu">
            <div class="input-Pesquisa">
                <input type="text" name="pesquisa" id="pesquisa" oninput="pesquisarProdutos()">
                <ul id="resultado-pesquisa" class="resultado-pesquisa"></ul>
            </div>
            <div class="icones">
                <label for="pesquisa"><i  class="fa-solid fa-magnifying-glass"></i></label>
            <div>
        </nav>
    </header>
    <i id="abrir-menu" class="fa-solid fa-chevron-right"></i>
    <main class="conteudo-principal"  data-produto-id="<%= produto._id %>">
        
        <div class="img-produtos">
            <div class="img-p" id="img1">
                <img src="<%= produto.imagem1 %>" alt="Imagem 1" id="imgP-1">
            </div>
            <div class="img-p" id="img2">
                <img src="<%= produto.imagem2 %>" alt="Imagem 2" id="imgP-2">
            </div>
        </div>
        <div class="informacoes-produto">
            <h2 id="nome-produto"><%= produto.nome %></h2>
            <p id="descricao-produto" class="<%= produto.descricao.length > 500 ? 'resumido' : '' %>"><%= produto.descricao %></p>
            <% if (produto.descricao.length > 400) { %>
                <button class="ver-mais" onclick="toggleDescricao()">Ver mais</button>
            <% } %>
        </div>
        
        <div class="conteiner-avaliacao">
            <form id="form-enviar-avaliacao">
                <h2 class="h2-txt-avaliacao">Fazer avaliação</h2>
                <div class="area-avaliacao" id="input-comentario">
                    <label for="comentario">Comentário</label>
                    <textarea name="comentario" id="comentario" cols="33" rows="10"></textarea>
                </div>
                <div class="area-avaliacao" id="input-nome">
                    <label for="nome">Nome</label>
                    <input type="text" name="nome" id="nome">
                </div>
                <div class="area-avaliacao" id="nota-avaliacao">
                    <label for="nota">Avaliação</label>
                    <div class="estrelas" id="estrelas-avaliacao">
                        <!-- Adicione as imagens das estrelas aqui -->
                        <img src="/assets/img/semAvaliacao.png" alt="Estrela" class="estrela" data-valor="1">
                        <img src="/assets/img/semAvaliacao.png" alt="Estrela" class="estrela" data-valor="2">
                        <img src="/assets/img/semAvaliacao.png" alt="Estrela" class="estrela" data-valor="3">
                        <img src="/assets/img/semAvaliacao.png" alt="Estrela" class="estrela" data-valor="4">
                        <img src="/assets/img/semAvaliacao.png" alt="Estrela" class="estrela" data-valor="5">
                    </div>
                </div>
                <button type="submit" class="btn_enviar">Enviar</button>
            </form>
            <h1 class="h1-produto">Avaliações</h1>
            <div class="comentarios-lista">
                <% if (comentarios && comentarios.length > 0) { %>
                    <% comentarios.forEach(function(comentario) { %>
                        <div class="comentario">
                            <p><strong><%= comentario.nome %></strong></p>
                            <div class="avaliacao" id="avaliacao-feita-<%= comentario._id %>">
                                <!-- Adiciona as imagens dinamicamente com base na nota da avaliação -->
                                <% for (let i = 1; i <= 5; i++) { %>
                                    <% if (i <= comentario.nota) { %>
                                        <img src="/assets/img/avaliacao1.png" alt="Avaliação positiva">
                                    <% } else { %>
                                        <img src="/public/assets/img/semAvaliacao.png" alt="Sem avaliação">
                                    <% } %>
                                <% } %>
                            </div>
                            <p id="comentario-text" class="<%= comentario.comentario.length > 250 ? 'resumido' : '' %>"><%= comentario.comentario %></p>
                            <% if (comentario.comentario.length > 50) { %>
                                <button class="ver-mais" onclick="toggleComentario(this)">Ver mais</button>
                            <% } %>
                        </div>
                    <% }); %>
                <% } else { %>
                    <p>Nenhuma avaliação disponível.</p>
                <% } %>
            </div>
            
    </main>
    <script src="https://unpkg.com/axios/dist/axios.min.js"></script>
    <script> 
        document.getElementById('form-enviar-avaliacao').addEventListener('submit', async function(event) {
          event.preventDefault();
  
          const nome = document.getElementById('nome').value;
          const comentario = document.getElementById('comentario').value;
          const notaElement = document.querySelector('.estrela-selecionada');
          
          // Verifica se a estrela selecionada existe e obtém seu valor
          let nota;
          if (notaElement) {
              nota = notaElement.getAttribute('data-valor');
          } else {
              alert('Por favor, selecione uma avaliação.');
              return;
          }
  
          // Verifica se todos os campos estão preenchidos
          if (nome.trim() === '' || comentario.trim() === '') {
              alert('Por favor, preencha todos os campos.');
              return;
          }
  
          const produtoId = document.querySelector('.conteudo-principal').dataset.produtoId;
  
          const data = {
              nome: nome,
              comentario: comentario,
              nota: nota
          };
  
          try {
              const response = await fetch(`/api/produtos/${produtoId}/avaliacoes`, {
                  method: 'POST',
                  headers: {
                      'Content-Type': 'application/json'
                  },
                  body: JSON.stringify(data)
              });
  
              if (response.ok) {
                  location.reload(); // Atualiza a página após o envio da avaliação
              } else {
                  console.error('Erro ao enviar avaliação');
              }
          } catch (error) {
              console.error('Erro ao enviar avaliação:', error);
          }
          
      });
  
      const estrelas = document.querySelectorAll('.estrela');
      estrelas.forEach(estrela => {
          estrela.addEventListener('click', function() {
              const valor = parseInt(estrela.getAttribute('data-valor')); // Obtém o valor da estrela clicada
  
              // Define a cor das estrelas clicadas e das estrelas anteriores
              estrelas.forEach(outraEstrela => {
                const outraEstrelaValor = parseInt(outraEstrela.getAttribute('data-valor'));
                if (outraEstrelaValor <= valor) {
                    outraEstrela.setAttribute('src', "/assets/img/avaliacao1.png"); // Estrela preenchida
                } else {
                    outraEstrela.setAttribute('src', "/assets/img/semAvaliacao.png"); // Estrela vazia
                }
            });
  
              // Atualize o valor do campo de entrada oculto (se necessário)
           
  
              // Adiciona a classe 'estrela-selecionada' à estrela clicada e remove das outras
              estrelas.forEach(outraEstrela => {
                  outraEstrela.classList.remove('estrela-selecionada');
              });
              estrela.classList.add('estrela-selecionada');
          });
      });
      let descricaoOriginal; // Variável para armazenar a descrição original do produto
       
      function carregarDescricaoOriginal() {
        const descricao = document.getElementById('descricao-produto');
        descricaoOriginal = descricao.innerHTML;
    }

    // Função para alternar entre exibir texto completo e resumido na descrição do produto
    function toggleDescricao() {
        const descricao = document.getElementById('descricao-produto');
        const botao = document.querySelector('.informacoes-produto button.ver-mais');

        if (descricao.classList.contains('expandido')) {
            // Restaura a descrição original
            descricao.innerHTML = descricaoOriginal;
            descricao.classList.remove('expandido');
            botao.textContent = 'Ver mais';
        } else {
            // Armazena a descrição original se ainda não estiver armazenada
            if (!descricaoOriginal) {
                carregarDescricaoOriginal();
            }
            // Substitui quebras de linha por <br> para expandir a descrição
            descricao.innerHTML = descricao.innerHTML.replace(/\n/g, '<br>');
            descricao.classList.add('expandido');
            botao.textContent = 'Ver menos';
        }
    }
  
  // Função para alternar entre exibir texto completo e resumido nos comentários
      function toggleComentario(botao) {
          const comentario = botao.previousElementSibling;
  
          if (comentario.classList.contains('expandido')) {
              comentario.classList.remove('expandido');
              botao.textContent = 'Ver mais';
          } else {
              comentario.classList.add('expandido');
              botao.textContent = 'Ver menos';
          }
      }
  
  
      // Verificar se os comentários dos usuários excedem o limite de caracteres
      const descricaoProduto = document.getElementById('descricao-produto');
      if (descricaoProduto.textContent.length > 700) {
          descricaoProduto.classList.add('resumido');
      }
  
  // Verificar se os comentários dos usuários excedem o limite de caracteres
      const comentarios = document.querySelectorAll('.comentario #comentario-text');
      comentarios.forEach(function(comentario) {
          if (comentario.textContent.length > 250) {
              comentario.classList.add('resumido');
          }
      });

      async function pesquisarProdutos() {
    try {
        const termoPesquisa = document.getElementById('pesquisa').value.toLowerCase();
        const response = await axios.get('/api/produtos');
        const produtos = response.data;
        const resultados = [];
        produtos.forEach(produto => {
            const nomeProduto = produto.nome.toLowerCase();
            console.log(nomeProduto)
            if (nomeProduto.includes(termoPesquisa)) {
                resultados.push(produto);
            }
        });
        const resultadoPesquisa = document.getElementById('resultado-pesquisa');
        resultadoPesquisa.innerHTML = '';
        resultados.forEach(resultado => {
            resultadoPesquisa.innerHTML += `<li><a href="${resultado._id}">${resultado.nome}</a></li>`;
        });
        if (termoPesquisa === '') {
            resultadoPesquisa.innerHTML = '';
        }
    } catch (error) {
        console.error('Erro ao carregar produtos:', error);
        alert('Erro ao carregar produtos. Verifique o console para mais detalhes.');
    }
}
    
  </script>      
</body>
</html>
